from langchain_openai import ChatOpenAI
from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
from langchain_core.output_parsers.openai_tools import (
    PydanticToolsParser,
)
from langchain.tools.render import format_tool_to_openai_function

from .schemas import PlaceAndFood
from .tools import crawl_restaurants

# Extractor
parser_pydantic = PydanticToolsParser(tools=[PlaceAndFood])

llm = ChatOpenAI()

extract_prompt = ChatPromptTemplate.from_messages(
    [
        (
            "system",
            """
                You're an assistance that generates an appropriate search term so that you can find good restaurants for user input
                It's mandatory to create restaurant-related search terms for the user's input
            """,
        ),
        MessagesPlaceholder(variable_name="search_query"),
        (
            "system",
            "Please generate a search term for the Above user's input",
        ),
    ]
)

initial_extractor = extract_prompt | llm.bind_tools(
    tools=[PlaceAndFood], tool_choice="PlaceAndFood"
)

extract_chain = initial_extractor | parser_pydantic

# Searcher
search_prompt = ChatPromptTemplate.from_messages(
    [
        (
            "system",
            """
                You're an assistance that searches for restaurants based on the search term generated by the extractor
                It's mandatory to search for restaurants based on the search term
            """,
        ),
        MessagesPlaceholder(variable_name="search_term"),
        (
            "system",
            "Please search for restaurants based on the Above search term"
            "You have access to the following tools: crawl_restaurants - You can crawl restaurants based on the search term ",
        ),
    ]
)

tools = [crawl_restaurants]

functions = [format_tool_to_openai_function(t) for t in tools]

search_chain = search_prompt | llm.bind_functions(functions)

# Recommender

recommend_prompt = ChatPromptTemplate.from_messages(
    [
        (
            "system",
            """
                You're an assistance that recommends restaurants based on the search term generated by the extractor
                It's mandatory to recommend restaurants based on the search term And Restaurants list
            """,
        ),
        MessagesPlaceholder(variable_name="restaurants_list"),
        (
            "system",
            "Please recommend restaurants based on the Above search term And Restaurants list",
        ),
    ]
)

recommend_chain = recommend_prompt | llm
